{"version":3,"sources":["components/TopNavbar/TopNavbar.js","components/GridLayout/GridLayout.js","components/AddPage/AddPage.js","components/LoginPage/LoginPage.js","components/SignUpPage/SignUpPage.js","components/SidebarTotals/SidebarTotals.js","components/ReadingList/ReadingList.js","containers/HomePage.js","components/WishList/WishList.js","containers/WishListPage.js","containers/App.js","registerServiceWorker.js","store/reducers/books.js","store/actions/actionTypes.js","store/reducers/wishList.js","index.js"],"names":["TopNavbar","props","toggle","setState","isOpen","state","className","Navbar","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","value","React","Component","GridLayout","children","AddPage","toreadInit","toreads","toreadText","inputLength","message","updateToreadText","bind","createToread","e","target","length","preventDefault","map","toread","link","key","Math","floor","random","href","rel","onSubmit","type","placeholder","onChange","LoginPage","onEmailChange","event","loginEmail","onPasswordChange","loginPassword","onSubmitLogin","isFailed","name","id","SignUpPage","onNameChange","registerName","registerEmail","registerPassword","onSubmitSignUp","SidebarTotals","cbData","wlData","cCount","wlCount","ReadingList","data","book","index","title","author","page","HomePage","currentBooks","bookWishList","connect","books","wishList","WishList","WishListPage","App","Switch","Route","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","initialState","action","newBook","concat","slice","findIndex","editedList","splice","newWish","wish","composeEnhancers","compose","rootReducer","combineReducers","booksReducer","wishListReducer","store","createStore","ReactDOM","render","BrowserRouter","basename","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.249f48d7.chunk.js","sourcesContent":["import React from 'react';\nimport './TopNavbar.css';\nimport { Link } from 'react-router-dom';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap';\n// import HomeIcon from '@material-ui/icons/Home';\n\nexport default class TopNavbar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    toggle = () => {\n        this.setState({ isOpen: !this.state.isOpen });\n    };\n\n    render() {\n        return (\n            <div className=\"navigation\">\n                <Navbar className=\"navbar navbar-dark ma\" expand=\"md\">\n                    <NavbarBrand tag={Link} to=\"/\">Book Tracker</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle}/>\n                    <Collapse isOpen={this.state.isOpen} navbar>\n                        <Nav className=\"mr-auto\" navbar>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/wish-list\" className=\"nav-link white underline pa4 pointer\">Books WishList</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/currentlist\" className='nav-active-style pa4'>Reading List</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/add\" className=\"nav-link white underline pa4\" value=\"Add Book\">Add Book</NavLink>\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/login\" className='nav-active-style'>Login</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink tag={Link} to=\"/signup\" className='nav-active-style'>Sign Up</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        );\n    };\n}","import React from 'react';\nimport './GridLayout.css';\n\nconst GridLayout = (props) => {\n    return (\n        <div className =\"container\">\n            <div className = \"row\">\n                <div className = \"col-md-3\">\n                    {props.children[0]}\n                </div>                \n                <div className = \"col-md-9\">\n                    {props.children[1]}\n                </div>                \n            </div>            \n        </div>\n    );\n};\n\nexport default GridLayout;","import React, { Component } from 'react';\nimport './AddPage.css';\nimport '../GridLayout/GridLayout';\n\nclass AddPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            toreadInit: ['Game of Thrones', 'Harry Potter', 'Lord of the Rings'],\n            toreads: [],\n            toreadText: '',\n            inputLength: 0,\n            message: false\n        };\n        this.updateToreadText = this.updateToreadText.bind(this);\n        this.createToread = this.createToread.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            toreads: this.state.toreadInit,\n        });\n    }\n\n    updateToreadText(e) {\n        if (e.target.value.length > 0) this.setState({\n            toreadText: e.target.value,\n            inputLength: e.target.value.length,\n        });\n    }\n\n    createToread(e) {\n        e.preventDefault();\n        // console.log(e);\n        if (this.state.inputLength > 0) this.setState({\n            toreads: [...this.state.toreads, this.state.toreadText],\n            toreadText: '',\n        });\n    }\n\n    render() {\n        const { toreadText, toreads, message } = this.state;\n\n        return(\n            <div>\n                <div className=\"container top\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-12 mt-3\">\n                            <h2 className=\"tc\">Add a Book</h2>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mw9 center ph3-ns\">\n                    <div className=\"cf ph2-ns\">\n                        <div className=\"fl w-50 w-50-ns pa2\">\n                            <div className=\"booklist\">\n                                <h2 className=\"tc\">Book List</h2>\n                                <ul>{toreads.map((toread) => {\n                                    const link = `http://www.google.com/search?q=${toread}%20book`;\n                                    return(\n                                        <li key={Math.floor(Math.random() * 10000) + 1}><a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{toread}</a></li>\n                                    )\n                                })}\n                                    {message ? <li>No search results.</li> : ''}\n                                </ul>\n                            </div>\n                        </div>\n                        <div className=\"fl w-50 w-50-ns pa2 bookadd mt-log-5\">\n                            <form onSubmit={this.createToread}>\n                                <div className='row input-group'>\n                                    <input type=\"text\" className=\"center-block\"\n                                           placeholder=\"Book Name\"\n                                           value={toreadText}\n                                           onChange={this.updateToreadText} />\n                                    <button className=\"btn btn-success center-block mr-auto ml-auto\">Add</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default AddPage;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './LoginPage.css';\n\nclass LoginPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n    \tloginEmail: '',\n    \tloginPassword: '',\n    \tisFailed: false\n    }\n\t}\n\n\tonEmailChange = (event) => {\n  \tthis.setState({ loginEmail: event.target.value });\n  }\n\n  onPasswordChange = (event) => {\n  \tthis.setState({ loginPassword: event.target.value });\n  }\n\n  onSubmitLogin = () => {\n  \t\n  }\n\n  render() {\n  \treturn (\n  \t\t<form className=\"form-container\">\n\t\t\t     <h2>Login</h2>\n\t\t\t        <input\n\t\t\t        \tonChange={this.onEmailChange}\n\t\t\t        \tclassName=\"\"\n\t\t\t\t\t\t\t\ttype=\"email\" \n\t\t\t\t\t\t\t\tname=\"email-address\" \n\t\t\t\t\t\t\t\tid=\"email-address\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t        />\n\t\t\t          <input\n\t\t\t\t\t\t\t\t\tonChange={this.onPasswordChange}\n\t\t\t\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\tname=\"password\" \n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t      {\n\t\t\t      \tthis.state.isFailed ?\n\t\t\t\t      \t<pre className=\"alert alert-danger\">\n\t\t\t\t\t\t    \tWrong Email/Password\n\t\t\t\t\t\t    </pre>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<pre></pre>\n\t\t\t      }\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclassName=\"grow\" \n\t\t\t\t\t\t\tonClick={this.onSubmitLogin}>Sign In\n\t\t\t\t\t\t</button>\n\t\t\t</form>\n  \t);\n  }\n}\n\nexport default LoginPage;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass SignUpPage extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n    \tregisterName: '',\n    \tregisterEmail: '',\n    \tregisterPassword: '',\n    \tisFailed: false\n    }\n\t}\n\n\tonNameChange = (event) => {\n  \tthis.setState({ registerName: event.target.value });\n  }\n\n  onEmailChange = (event) => {\n  \tthis.setState({ registerEmail: event.target.value });\n  }\n\n  onPasswordChange = (event) => {\n  \tthis.setState({ registerPassword: event.target.value });\n  }\n\n  onSubmitSignUp = () => {\n  \t\n\t}\n\t\n  render() {\n  \treturn (\n\t\t\t<div>\n\t\t\t\t\t<form className=\"form-container\">\n\t\t\t\t\t\t<h2>Sign Up</h2>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.onNameChange}\n\t\t\t\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t\t\t\t\ttype=\"name\" \n\t\t\t\t\t\t\t\t\tname=\"name\" \n\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonChange={this.onEmailChange}\n\t\t\t\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\tname=\"email-address\" \n\t\t\t\t\t\t\t\t\tid=\"email-address\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tonChange={this.onPasswordChange}\n\t\t\t\t\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t\t\t\t\t\ttype=\"password\" \n\t\t\t\t\t\t\t\t\t\tname=\"password\" \n\t\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{\n\t\t\t      \tthis.state.isFailed ?\n\t\t\t\t      \t<pre className=\"alert alert-danger\">\n\t\t\t\t\t\t    \tFailed Registering Account\n\t\t\t\t\t\t    </pre>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<pre></pre>\n\t\t\t     \t\t}\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\tclassName=\"grow\" \n\t\t\t\t\t\t\t\tonClick={this.onSubmitSignUp}>Register\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\n\t\t\t</form>\n\t\t\t</div>  \t\n\t);\n}  \n\n}\n\nexport default SignUpPage;","import React from 'react';\nimport './SidebarTotals.css';\n\nconst SidebarTotals = ({cbData, wlData}) => {\n        const cCount = cbData.length;\n        const wlCount = wlData.length;\n    return (\n        <div>    \n        <div className=\"container\">\n        <div className=\"row\">\n                <div className=\"col-3\">\n                        <div className=\"sideBar\">\n                                <table>\n                                <thead>\n                                        <tr>\n                                                <th>Description</th>\n                                                <th>Total</th>\n                                        </tr>\n                                </thead>\n                                <tbody>\n                                        <tr>\n                                                <td>Read</td>\n                                                <td>5</td>\n                                        </tr>\n                                        <tr>\n                                                <td>Wishlist</td>\n                                                <td>{wlCount}</td>\n                                        </tr>\n                                        <tr>\n                                                <td>Current</td>\n                                                <td>{cCount}</td>\n                                        </tr>\n                                </tbody>\n                        </table>\n                        </div>\n                </div>                       \n        </div>\n        </div>\n        </div>\n    );\n};\n\nexport default SidebarTotals;","import React from \"react\";\nimport \"./ReadingList.css\";\n\nconst ReadingList = ({ data }) => {\n  return (\n    <div>\n      <div className=\"mainContent\">\n        <h1>Progress on current books</h1>\n        <div>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <td>Title</td>\n                <td>Author</td>\n                <td>Progress</td>\n                <td />\n                <td />\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((book, index) => (\n                <tr className=\"bookRow\" key={book.id}>\n                  <td className=\"\">{book.title}</td>\n                  <td>{book.author}</td>\n                  <td>{book.page}</td>\n                  <td>\n                    <button key={book.id} className=\"btn btn-basic btn-sm\">\n                      Edit\n                    </button>\n                  </td>\n                  <td>\n                    <button key={book.id} className=\"btn btn-basic btn-sm\">\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReadingList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GridLayout from '../components/GridLayout/GridLayout';\nimport SidebarTotals from '../components/SidebarTotals/SidebarTotals';\nimport ReadingList from '../components/ReadingList/ReadingList';\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <GridLayout>\n                <SidebarTotals cbData={this.props.currentBooks} wlData={this.props.bookWishList}/>\n                <ReadingList data={this.props.currentBooks}/>\n            </GridLayout>\n        );\n    }\n}\n\nconst mapPropsToState = state => ({\n    currentBooks: state.books.books,\n    bookWishList: state.wishList.wishList\n});\n\nexport default connect(mapPropsToState, null)(HomePage);","import React from \"react\";\nimport \"./WishList.css\";\n\nconst WishList = ({ data, props }) => {\n  return (\n    <div>\n      <div className=\"mainContent\">\n        <h1>Books on My Wish List</h1>\n        <div>\n          <table className=\"table\" data={data}>\n            <thead>\n              <tr>\n                <td>Title</td>\n                <td>Author</td>\n                <td>Progress</td>\n                <td />\n                <td />\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((book, index) => (\n                <tr key={book.id}>\n                  <td>{book.title}</td>\n                  <td>{book.author}</td>\n                  <td>{book.page}</td>\n                  <td>\n                    <button className=\"btn btn-basic btn-sm\" href=\"\">\n                      Edit\n                    </button>\n                  </td>\n                  <td>\n                    <button className=\"btn btn-basic btn-sm\" href=\"\">\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WishList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport GridLayout from '../components/GridLayout/GridLayout';\nimport SidebarTotals from '../components/SidebarTotals/SidebarTotals';\nimport WishList from '../components/WishList/WishList';\n\nclass WishListPage extends Component {\n    render() {\n        return (\n            <GridLayout>\n                <SidebarTotals cbData={this.props.currentBooks} wlData={this.props.bookWishList}/>\n                <WishList data={this.props.bookWishList}/>\n            </GridLayout>\n        );\n    }\n}\n\nconst mapPropsToState = state => ({\n    currentBooks: state.books.books,\n    bookWishList: state.wishList.wishList\n});\n\nexport default connect(mapPropsToState, null)(WishListPage);","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\n\n\n\nimport TopNavbar from '../components/TopNavbar/TopNavbar';\nimport AddPage from '../components/AddPage/AddPage';\nimport LoginPage from '../components/LoginPage/LoginPage';\nimport SignUpPage from '../components/SignUpPage/SignUpPage';\nimport HomePage from './HomePage';\nimport WishListPage from './WishListPage';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div>\n                <TopNavbar/>\n                <Switch>\n                    <Route path=\"/\" exact component={HomePage} />\n                    <Route path=\"/wish-list\" exact component={WishListPage} />\n                    <Route path=\"/add\" exact component={AddPage} />\n                    <Route path=\"/login\" exact component={LoginPage} />\n                    <Route path=\"/signup\" exact component={SignUpPage} />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    books: [],\n    wishList: []\n};\n\nconst books = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_BOOK: {\n            const books = state.books;\n            const id = books.length > 0 ? books[books.length - 1].id + 1 : 1;\n            const newBook = {\n                id,\n                title: action.title,\n                author: action.author,\n                page: action.page\n            };\n\n            return {\n                ...state,\n                books: books.concat([newBook])\n            }\n        }\n        case actionTypes.EDIT_BOOK: {\n            const books = state.books.slice();\n            const index = books.findIndex(book => book.id === action.id);\n            books[index].title = action.title;\n            books[index].author = action.author;\n            books[index].page = action.page;\n\n            return {\n                ...state,\n                books\n            }\n        }\n        case actionTypes.REMOVE_BOOK: {\n            const books = state.books.slice();\n            const index = books.findIndex(book => book.id === action.id);\n            const editedList = books.splice(index, 1);\n\n            return {\n                ...state,\n                books: editedList\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default books;","export const ADD_BOOK = 'ADD_BOOK';\nexport const EDIT_BOOK = 'EDIT_BOOK';\nexport const REMOVE_BOOK = 'REMOVE_BOOK';\n\nexport const ADD_WISH = 'ADD_WISH';\nexport const EDIT_WISH = 'EDIT_WISH';\nexport const REMOVE_WISH = 'REMOVE_WISH';","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    wishList: []\n};\n\nconst wishList = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_WISH: {\n            const wishList = state.wishList;\n            const id = wishList.length > 0 ? wishList[wishList.length - 1].id + 1 : 1;\n            const newWish = {\n                id,\n                title: action.title,\n                author: action.author\n            };\n\n            return {\n                ...state,\n                wishList: wishList.concat([newWish])\n            }\n        }\n        case actionTypes.EDIT_WISH: {\n            const wishList = state.wishList.slice();\n            const index = wishList.findIndex(wish => wish.id === action.id);\n            wishList[index].title = action.title;\n            wishList[index].author = action.author;\n\n            return {\n                ...state,\n                wishList\n            }\n        }\n        case actionTypes.REMOVE_WISH: {\n            const wishList = state.wishList.slice();\n            const index = wishList.findIndex(wish => wish.id === action.id);\n            const editedList = wishList.splice(index, 1);\n\n            return {\n                ...state,\n                wishList: editedList\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport default wishList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, combineReducers } from 'redux';\nimport 'tachyons';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport booksReducer from './store/reducers/books';\nimport wishListReducer from './store/reducers/wishList';\n\n/* eslint-disable no-underscore-dangle */\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose) : compose;\n/* eslint-enable */\nconst rootReducer = combineReducers({\n    books: booksReducer,\n    wishList: wishListReducer\n});\nconst store = createStore(\n    rootReducer,\n    composeEnhancers()\n);\nconst baseName = process.env.NODE_ENV === 'development' ? '/' : '/book-tracker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter basename={baseName}>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}